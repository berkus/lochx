class Doughnut {
    cook() {
        print "Fry until golden brown.";
    }

    first() { print "Base method"; }
}

class BostonCream < Doughnut {
    cook() {
        super.cook();
        print "Pipe full of custard and coat with chocolate.";
    }

    second() { print "Derived method"; }
}

//class Oops < Oops {}

//fun NotAClass() {}
//class Derived < NotAClass {}

//var NotAClass = "I am totally not a class";
//class Subclass < NotAClass {}

BostonCream().first();
BostonCream().second();

BostonCream().cook();

//print super;

class A {
  method() {
    print "A method";
  }
}

class B < A {
  method() {
    print "B method";
  }

  test() {
    super.method();
  }
}

class C < B {}

C().test();
